# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci
on: [pull_request, push]
jobs:
  flake8-linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
      env:
        POETRY_VIRTUALENVS_CREATE: false
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    name: Python ${{ matrix.python-version }}
    steps:
    - name: Check out
      uses: actions/checkout@v2
      
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
        
    - name: Install Poetry 
      uses: snok/install-poetry@v1

    # Cache lock dependencies to speed up workflows
    # - name: Cache Poetry virtualenv
    #   uses: actions/cache@v1
    #   id: cached-poetry-dependencies
    #   with:
    #     path: .venv
    #     key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install Dependencies using Poetry
      run: poetry install
      # if: steps.cache.outputs.cache-hit != 'true'

    - name: Run pytest
      run: poetry run pytest
