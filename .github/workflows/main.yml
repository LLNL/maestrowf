# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci
on:
  push:
    branches: [main, develop] # proposed addition
  pull_request:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      env:
        POETRY_VIRTUALENVS_CREATE: false

    - name: Install flake8
      run: |
        pip install flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-install:
    needs: [ linting ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    name: Python ${{ matrix.python-version }} with pip

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Test editable install
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .

  tests:
    needs: [ linting ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    name: Python ${{ matrix.python-version }} with poetry

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install Dependencies using Poetry
      run: poetry install

    - name: Run pytest
      run: poetry run pytest
